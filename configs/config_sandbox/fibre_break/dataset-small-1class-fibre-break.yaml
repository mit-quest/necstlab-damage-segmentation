dataset_config:
  dataset_split:
    train: [
      "UoS_SR_B1_108pctUTS_700_1450_1556"
    ]
    validation: [
      "UoS_SR_A1_1339N_1080_730_1400",
    ]
    test: [
      "UoS_SR_C1_1575N_660_1360_1712",
    ]
  stack_downsampling:
    type: 'linear' # 'None', 'random', 'linear', 'from_start', 'from_end'
#    frac: 1.0  # if 'random', 'linear', 'from_start', or 'from_end' selected; ignored if `None` selected
    number_of_images: 500  # if 'random', 'linear', 'from_start', or 'from_end' selected; ignored if `None` selected
    num_skip_beg_slices: 50 # trims n slices off of beginning of stack with N total slices. Slice n+1 becomes new Slice 1
    num_skip_end_slices: 50 # trims m slices off of end of stack with N total slices. Slice N-(m+1) becomes new last slice
  target_size: [512, 512]  # width, height
  image_cropping:
    type: 'class' # 'None' (downscale to target), 'linear' (def # crops), 'random' (def # crops), 'class' (def # crops), 'all' (all crops)
    num_per_image: 1 # if type 'linear' (translation) or 'random' selected, then is num of crops (of target size) per image
    num_pos_per_class: 1 # if type 'class', then is num of random class-positive crops (of target sz) per img, >0
    num_neg_per_class: 1 # if type 'class', then is num of random class-negative crops (of target sz) per img, >=0
    min_num_class_pos_px: # if type 'class', then is min num of class-pos pixels required in given class-pos crop, >0
#      class_0_pos_px: 10 # '0-degree_damage', '45-degree_damage', '90-degree_damage'
      class_0_pos_px: 5 # '0-degree_damage'
#      class_1_pos_px: 5 # '45-degree_damage'
#      class_2_pos_px: 5  # '90-degree_damage'
  class_annotation_mapping:
#    class_0_annotation_GVs: [100, 175, 250]  # '0-degree_damage', '45-degree_damage', '90-degree_damage'
    class_0_annotation_GVs: [255]  # '0-degree_damage'
#    class_1_annotation_GVs: [175]  # '45-degree_damage'
#    class_2_annotation_GVs: [250]  # '90-degree_damage'
